
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASIGNAR COMDOB CORDER CORIZQ DISTINTO DIV DOSPUNTO ENDL ENTERO FOR GET IDENTIFICADOR IGUAL INCLUDE INT LLADER LLAIZQ MAYORDER MAYORIGUAL MAYORIZQ MAYORQUE MENORIGUAL MENORQUE MINUSMINUS MODULO MULT NAMESPACE NOT NUMERAL OR PARDER PARIZQ PLUSPLUS POTENCIA PUNTO PUNTOCOMA RESERVADA RESTA RETURN SI SINO STD SUMA SYSTEM USING VOID WHILE\n    expresion : WHILE PARIZQ IDENTIFICADOR MAYORQUE ENTERO PARDER LLAIZQ LLAIZQ\n              | IDENTIFICADOR PARIZQ COMDOB IDENTIFICADOR COMDOB PARDER PUNTOCOMA PUNTOCOMA\n              | LLADER LLADER\n    '
    
_lr_action_items = {'WHILE':([0,],[2,]),'IDENTIFICADOR':([0,5,9,],[3,8,11,]),'LLADER':([0,4,],[4,7,]),'$end':([1,7,18,19,],[0,-3,-1,-2,]),'PARIZQ':([2,3,],[5,6,]),'COMDOB':([6,11,],[9,13,]),'MAYORQUE':([8,],[10,]),'ENTERO':([10,],[12,]),'PARDER':([12,13,],[14,15,]),'LLAIZQ':([14,16,],[16,18,]),'PUNTOCOMA':([15,17,],[17,19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expresion':([0,],[1,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expresion","S'",1,None,None,None),
  ('expresion -> WHILE PARIZQ IDENTIFICADOR MAYORQUE ENTERO PARDER LLAIZQ LLAIZQ','expresion',8,'p_expresion','analizador_sintactico.py',11),
  ('expresion -> IDENTIFICADOR PARIZQ COMDOB IDENTIFICADOR COMDOB PARDER PUNTOCOMA PUNTOCOMA','expresion',8,'p_expresion','analizador_sintactico.py',12),
  ('expresion -> LLADER LLADER','expresion',2,'p_expresion','analizador_sintactico.py',13),
]
